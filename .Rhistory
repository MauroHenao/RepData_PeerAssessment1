{
d=rbind(d,datos[[i]][2])
}
datos[[1]]
names(datos[[1]])
2
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
library(plyr)
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
datos=datalist[id]
i=id[1]
d=datos[[i]][2]
if(pollutant=="sulfate") 2
if(pollutant=="nitrate") 3
for(i in length(id))
{
d=rbind(d,datos[[i]][2])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",c(1:2))
pollutantmean("specdata","sulfate",c(10:12))
id=c(10,11,12)
i=id[1]
i
length(id)
id[length(id)]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
library(plyr)
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
datos=datalist[id]
i=id[1]
d=datos[[i]][2]
if(pollutant=="sulfate") 2
if(pollutant=="nitrate") 3
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][2])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",c(1:2))
pollutantmean("specdata","sulfate",c(10:12))
id
i=id[1]
d=datos[[i]][2]
i
datos[[10]][2]
datos=datalist[id]
datos
str(datos)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
d=datos[[i]][2]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
library(plyr)
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
d=datos[[i]][2]
if(pollutant=="sulfate") 2
if(pollutant=="nitrate") 3
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][2])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",c(1:2))
pollutantmean("specdata","sulfate",c(10:12))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
filenames
datos
id=c(13:15)
i=id[1]
i
datos[[1]]$sulfate
datos[[1]][2]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
id=datos[[i]][2]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",c(10:12))
pollutantmean("specdata","sulfate",10:12)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
id=datos[[i]][2]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][2])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",10:12)
pollutantmean("specdata","sulfate",1:2)
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
datos[[1]][2]
str(datos[[1]])
names(datos[[1]])
datos[[1]]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
d=datos[[1]][clase]
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",1:10)
mean(datos[[23]][3],na.rm=T)
datos[[23]][3]
mean(as.numeric(datos[[23]][3],na.rm=T))
mean(as.numeric(datos[[23]][3]))
datos2=as.numeric(datos[[23]][3])
datos2=na.omit(datos[[23]][3])
datos2
mena(as.numeric(datos2))
mean(as.numeric(datos2))
str(datos2)
mean(datos2)
datos2
str(datos2)
mean(datos2)
pollutantmean("specdata","sulfate",23)
t=na.omit(datos[[23]][3])
t
str(t)
mean(t[1])
mean(t[[1]])
id=23
i=id[1]
i
pollutant="nitrate"
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
clase
d=datos[[1]][clase]
d
d=datos[[i]][clase]
d
id[length(id)]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
d=datos[[i]][clase]
for(i in id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","sulfate",23)
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
id=c(70,71,72)
i=id[1]
i
pollutant="nitrate"
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
clase
d=datos[[i]][clase]
d
id[length(id)]
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
d=datos[[i]][clase]
for(i=id[2]in id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
d=datos[[i]][clase]
for(i in id[2]:id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##setwd(paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = ""))
filenames=list.files(path="C:/Users/maurhema/Desktop/DataScience/CourseraR/Assignment1/specdata", full.names=TRUE)
datos = lapply(filenames, function(x){read.csv(file=x,header=T)})
i=id[1]
if(pollutant=="sulfate") clase=2
if(pollutant=="nitrate") clase=3
d=datos[[i]][clase]
if(length(id)>1)
{
for(i in id[2]:id[length(id)])
{
d=rbind(d,datos[[i]][clase])
}
mean(d[[1]],na.rm=T)
}
else mean(d[[1]],na.rm=T)
}
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","sulfate",1:10)
dir=paste("C:\Users\maurhema\Desktop\DataScience\CourseraR\Assignment1",directory,sep = "")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?splom()
?trellis.par.set()
?print.trellis()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
?lpoints()
?axis()
?lpoints()
text()
?text()
?trellis.par.set()
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
hist(sinna$steps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
setwd("D:/Coursera/DataScience/ReproducibleData/RepData_PeerAssessment1")
datos=read.csv("activity.csv",header=T)
datos=read.csv("activity.csv",header=T)
head(datos)
totalsteps=ddply(datos,~date,summarise,steps=sum(steps))
NAtotalsteps=na.omit(totalsteps)
library(plyr)
totalsteps=ddply(datos,~date,summarise,steps=sum(steps))
NAtotalsteps=na.omit(totalsteps)
#2.
hist(NAtotalsteps$steps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
meansteps=ddply(datos,~date,summarise,mean=mean(steps),median=median(steps))
NAmeansteps=na.omit(meansteps)
NAmeansteps
NAs=sum(is.na(datos))
NAs
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
sinna=ddply(datos, ~ date, transform, steps = impute.mean(steps))
sum(is.na(sinna))
sum(is.na(totalsteps))
sum(is.na(totalstepsNA))
sum(is.na(NAtotalsteps))
hist(sinna$steps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
nrow(sinna)
sinnatotalsteps=ddply(sinna,~date,summarise,steps=sum(steps))
hist(sinnatotalsteps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
hist(sinnatotalsteps$steps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
sinnameansteps=ddply(datos,~date,summarise,mean=mean(steps),median=median(steps))
sinNAmeansteps
sinnameansteps
View(meansteps)
sum(sinnameansteps$mean)
sum(na.omit(sinnameansteps$mean))
sum(na.omit(NAmeansteps$mean))
sinnameansteps=ddply(datos,~date,summarise,mean=mean(steps))
mean(datos, na.rm = TRUE)
mean(datos$steps, na.rm = TRUE)
is.na(datos)
datos[is.na(datos)==FALSE]
datos$steps[is.na(datos$steps)==FALSE]
subset(datos$steps,is.na(datos$steps)
)
subset(datos,is.na(datos$steps)
mean(x, na.rm = TRUE)
subset(datos,is.na(datos$steps))
t=subset(datos,date="2012-11-14")
sum(is.na(t))
sum(is.na(datos))
nrow(t)
str(datos$date)
t=subset(datos,datos$date="2012-11-14")
t=subset(datos,datos$date=="2012-11-14")
rnow(t)
nrow(t)
sum(is.na(t))
t=subset(datos,datos$date=="2012-11-10")
nrow(t)
sum(is.na(t))
sinnameansteps=ddply(datos,~interval,summarise,mean=mean(steps))
sinnameansteps
meaninterval=ddply(NAdatos,~interval,summarise,mean=mean(steps))
meaninterval=ddply(datos,~interval,summarise,mean=mean(steps))
meaninterval
meaninterval=ddply(datos,~interval,summarise,mean=mean(steps,na.rm=true))
meaninterval=ddply(datos,~interval,summarise,mean=mean(steps,na.rm=T))
meaninterval
mean(datos, na.rm = TRUE)
mean(datos$steps, na.rm = TRUE)
sinna=ddply(datos, ~ date, transform, steps = impute.mean(datos$steps))
sinna
sinna=ddply(datos, ~ date, transform, datos$steps = impute.mean(datos$steps))
install.packages("Hmisc")
require(Hmisc)
df2 <- ddply(datos, "date", mutate, imputed.value = impute(steps, mean))
View(df2)
?ave
datos$steps[is.na(datos$steps)]
datos$steps[is.na(datos$steps)] <- ave(datos$steps, datos$date,
FUN = function(z)
mean(z, na.rm = TRUE))[c(which(is.na(datos$steps)))]
View(datos)
datos=read.csv("activity.csv",header=T)
datos$date=strptime(as.character(datos$date),"%Y-%m-%d")
datos$steps[is.na(datos$steps)] <- ave(datos$steps, datos$date,
FUN = function(z)
mean(z, na.rm = TRUE))[c(which(is.na(datos$steps)))]
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
sinna=ddply(datos, ~ date, transform, steps = impute.mean(datos$steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
sinna=ddply(datos, ~ date, transform, steps = impute.mean(steps))
datos=read.csv("activity.csv",header=T)
datos$date=as.character(datos$date)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
sinna=ddply(datos, ~ date, transform, steps = impute.mean(steps))
View(sinna)
r=subset(datos,date=="2012-10-01")
nrow(r)
mean(r, na.rm = TRUE)
str(datos$steps)
str(r)
str(r$steps)
mean(r$steps, na.rm = TRUE)
datos$steps[is.na(datos$steps)] <- ave(datos$steps, as.character(datos$date),
FUN = function(z)
mean(z, na.rm = TRUE))[c(which(is.na(datos$steps)))]
View(df2)
ave(datos$steps, datos$date,
FUN = function(z)
mean(z, na.rm = TRUE))
datos$steps[is.na(datos$steps)] <- ave(datos$steps, datos$date,
FUN = function(z)
mean(z, na.rm = TRUE))[c(which(is.na(datos$steps)))]
View(datos)
View(datos)
datos$steps[is.na(datos$steps)] <- ave(datos$steps, datos$date,
FUN = function(z)
mean(z, na.rm = TRUE))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
sinna=ddply(datos, ~ date, transform, steps = impute.mean(steps))
View(sinna)
datos$steps[is.na(datos$steps)] =0
View(datos)
datos=read.csv("activity.csv",header=T)
sinna=datos
sinna$steps[is.na(sinna$steps)] =0
sinnatotalsteps=ddply(sinna,~date,summarise,steps=sum(steps))
hist(sinnatotalsteps$steps,main="Histogram \n Total of steps per day",xlab="steps",col = "lightgray")
sinnameansteps=ddply(datos,~interval,summarise,mean=mean(steps))
sinnameansteps=ddply(sinna,~date,summarise,mean=mean(steps))
sinnameansteps
